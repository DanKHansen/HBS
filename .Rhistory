source('~/HBS/Exploratory.R', encoding = 'UTF-8')
setwd("~/HBS")
source('~/HBS/Exploratory.R', encoding = 'UTF-8')
ds1 <- read.csv("IT0808.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE, fileEncoding = "Latin1", na.strings = c('', ' '))
ds4 <- read.csv("IT1314.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE, fileEncoding = "Latin1", na.strings = c('', ' '))
ds1 <- read.csv("IT0808.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE, fileEncoding = "Latin1", na.strings = c('', ' '))
ds2 <- read.csv("IT0910.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE, fileEncoding = "Latin1", na.strings = c('', ' '))
ds4 <- read.csv("IT1314.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE, fileEncoding = "Latin1", na.strings = c('', ' '))
ds3 <- read.csv("IT1112.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE, fileEncoding = "Latin1", na.strings = c('', ' '))
View(ds3)
ds1 <- read.csv("IT0808.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE, na.strings = c('', ' '))
ds2 <- read.csv("IT0910.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE, na.strings = c('', ' '))
ds4 <- read.csv("IT1314.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE, na.strings = c('', ' '))
IT1112 <- read.delim("~/GitHub/HBS/IT1112.txt", stringsAsFactors=FALSE)
View(IT1112)
ds3 <- read.csv("IT1112.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE, na.strings = c('', ' '))
IT1112 <- read.delim("~/GitHub/HBS/IT1112.txt", encoding="UTF-8")
View(IT1112)
ds3 <- read.csv("IT1112.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE, na.strings = c('', ' '))
View(ds3)
IT1112 <- read.delim("~/GitHub/HBS/IT1112.txt", encoding="UTF-8")
View(IT1112)
ds3 <- subset(IT1112, select = -c(url,kilde,undertitel,annonctekst,uklar))
ds3 <- subset(IT1112, select = -c(url,kilde,undertitel,annoncetekst,uklar))
save(ds3, file = IT1112.txt)
save(ds3, file = 'IT1112.txt')
ds3 <- read.csv("IT1112.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE, na.strings = c('', ' '))
ds3 <- read.delim("IT1112.txt", encoding = 'UTF-8')
ds3 <- read.delim("IT1112.txt", encoding = 'UTF-8')
ds3 <- read.delim("IT1112.txt", encoding = 'UTF-8')
ds3 <- read.delim("IT1112.txt", encoding = 'UTF-8')
ds4 <- read.delim("IT1314.txt", encoding = 'UTF-8')
ds4 <- read.delim("IT1314.txt", encoding = 'UTF-8')
ds1 <- read.delim("IT0808.txt", encoding = 'UTF-8')
ds2 <- read.delim("IT0910.txt", encoding = 'UTF-8')
ds3 <- read.delim("IT1112.txt", encoding = 'UTF-8')
ds4 <- read.delim("IT1314.txt", encoding = 'UTF-8')
ds <- rbind(ds1,ds2,ds3,ds4)
View(ds2)
ds <- subset(ds, select = -c(url,kilde,undertitel,annoncetekst,uklar))
save(ds, file='ds.csv')
save(ds, file='ds.csv',ascii = TRUE)
write.csv(ds,'ds.csv')
ds <- read.csv('ds.csv', encoding = 'ANSI')
ds <- read.csv2("~/GitHub/HBS/ds.csv", encoding="MS-ANSI", stringsAsFactors=FALSE)
View(ds)
ds <- read.csv2('ds.csv', encoding = 'MS-ANSI', stringsAsFactors = FALSE)
View(ds)
View(ds)
write.csv(ds,'ds.csv', row.names = FALSE)
ds1 <- NULL
ds2 <- NULL
ds3 <- NULL
ds4 <- NULL
remove(ds1)
remove(c(ds1,ds2,ds3,ds4)
)
remove(list = (ds1,ds2,ds3,ds4))
remove(list(ds1,ds2,ds3,ds4))
remove(ds2)
remove(ds3)
remove(ds4)
ds1 <- read.delim("IT0808.txt", encoding = 'UTF-8')
ds2 <- read.delim("IT0910.txt", encoding = 'UTF-8')
ds3 <- read.delim("IT1112.txt", encoding = 'UTF-8')
ds4 <- read.delim("IT1314.txt", encoding = 'UTF-8')
ds <- rbind(ds1,ds2,ds3,ds4)
#fjern variablerne kilde og uklar
ds <- subset(ds, select = -c(url,kilde,undertitel,annoncetekst,uklar))
#gem som csv
write.csv(ds,'ds.csv', row.names = FALSE)
remove(ds1,ds2,ds3,ds4)
ds <- read.csv2('ds.csv', encoding = 'MS-ANSI', stringsAsFactors = FALSE)
View(ds)
View(ds)
ds1 <- read.delim("IT0808.txt", encoding = 'UTF-8')
ds2 <- read.delim("IT0910.txt", encoding = 'UTF-8')
ds3 <- read.delim("IT1112.txt", encoding = 'UTF-8')
ds4 <- read.delim("IT1314.txt", encoding = 'UTF-8')
ds <- rbind(ds1,ds2,ds3,ds4)
#fjern variablerne kilde og uklar
ds <- subset(ds, select = -c(url,kilde,undertitel,annoncetekst,uklar))
#gem som csv
write.csv(ds,'ds.csv')
remove(ds1,ds2,ds3,ds4)
View(ds)
View(ds)
ds <- read.csv2('ds.csv', encoding = 'MS-ANSI', stringsAsFactors = FALSE, na.strings = c('' ,'NA'))
ds <- read.csv2('ds.csv', sep = "," ,encoding = 'MS-ANSI', stringsAsFactors = FALSE, na.strings = c('' ,'NA'))
View(ds)
View(ds)
View(ds)
View(ds)
ds <- filter(ds, nchar(postnummer) == 4 | is.na(postnummer))
description(ds)
str(ds)
description(ds)
summarize(ds)
summary(ds)
ds <- filter(ds, nchar(postnummer) == 4 | is.na(postnummer))
ds$dato <- as.Date(as.character(ds$dato),'%Y%m%d')
ds <- subset(ds, !(is.na(virksomhed)))
ds <- subset(ds, !(postnummer %in% c('0000','0001', '0100')))
ds$virksomhed <- tolower(ds$virksomhed)
nchar(postnummer)
ds <- filter(ds, nchar(ds.postnummer) == 4 | is.na(postnummer))
View(ds)
View(ds)
ds1 <- read.delim("IT0808.txt", encoding = 'UTF-8')
ds2 <- read.delim("IT0910.txt", encoding = 'UTF-8')
ds3 <- read.delim("IT1112.txt", encoding = 'UTF-8')
ds4 <- read.delim("IT1314.txt", encoding = 'UTF-8')
ds <- rbind(ds1,ds2,ds3,ds4)
#fjern variablerne kilde og uklar
ds <- subset(ds, select = -c(url,kilde,undertitel,annoncetekst,uklar))
#gem som csv
write.csv(ds,'ds.csv', row.names = FALSE)
ds <- read.csv2('ds.csv', header= TRUE, sep = "," ,encoding = 'MS-ANSI', stringsAsFactors = FALSE, na.strings = c('',' '))
View(ds)
View(ds)
ds <- filter(ds, nchar(postnummer) == 4 | is.na(postnummer))
ds <- filter(ds, nchar(ds$postnummer) == 4 | is.na(postnummer))
ds <- filter(ds, nchar(ds$postnummer) == 4 | is.na(ds$postnummer))
ds <- read.csv2('ds.csv', header= TRUE, sep = "," ,encoding = 'MS-ANSI', stringsAsFactors = FALSE, na.strings = c('',' '))
ds <- data.frame(ds)
ds <- filter(ds, nchar(postnummer) == 4 | is.na(postnummer))
ds <- filter(ds, nchar(ds$postnummer) == 4 | is.na(postnummer))
ds <- filter(ds, nchar(ds$postnummer) == 4 | is.na(ds$postnummer))
ds <- read.csv('ds.csv', header= TRUE, sep = "," ,encoding = 'MS-ANSI', stringsAsFactors = FALSE, na.strings = c('',' '))
ds <- filter(ds, nchar(postnummer) == 4 | is.na(postnummer))
library(tidyr)
install.packages("tidyr")
install.packages("dplyr")
ds <- filter(ds, nchar(postnummer) == 4 | is.na(postnummer))
library(tidyr)
library(dplyr)
ds <- filter(ds, nchar(postnummer) == 4 | is.na(postnummer))
ds$dato <- as.Date(as.character(ds$dato),'%Y%m%d')
ds <- subset(ds, !(is.na(virksomhed)))
ds <- subset(ds, !(postnummer %in% c('0000','0001', '0100')))
ds$virksomhed <- tolower(ds$virksomhed)
ds_cvr <- read.csv("39265897_93207_20160808134952_VIRKSOMHEDER.csv", header=TRUE, stringsAsFactors=FALSE)
ds_cvr$livsforloeb_startdato <- as.Date(ds_cvr$livsforloeb_startdato,'%d-%m-%Y')
ds_cvr <- filter(ds_cvr, as.numeric(format(livsforloeb_startdato,'%Y')) < 2009)
ds_cvr$navn_tekst <- tolower(ds_cvr$navn_tekst)
#fjern evt. leading og trailing whitespaces
ds$virksomhed <- trimws(ds$virksomhed, which = 'both')
ds_cvr$navn_tekst <- trimws(ds_cvr$navn_tekst, which = 'both')
ds_cvr <- read.csv("39265897_93207_20160808134952_VIRKSOMHEDER.csv", header=TRUE, stringsAsFactors=FALSE)
ds_cvr$livsforloeb_startdato <- as.Date(ds_cvr$livsforloeb_startdato,'%d-%m-%Y')
ds_cvr <- filter(ds_cvr, as.numeric(format(livsforloeb_startdato,'%Y')) < 2009)
ds_cvr$navn_tekst <- tolower(ds_cvr$navn_tekst)
#fjern evt. leading og trailing whitespaces
ds$virksomhed <- trimws(ds$virksomhed, which = 'both')
ds_cvr$navn_tekst <- trimws(ds_cvr$navn_tekst, which = 'both')
ds_match_cvr <- semi_join(ds,ds_cvr, by = c('virksomhed' = 'navn_tekst'))
ds_nomatch_cvr <- anti_join(ds,ds_cvr, by = c('virksomhed' = 'navn_tekst'))
View(ds_match_cvr)
View(ds_match_cvr)
View(ds_nomatch_cvr)
View(ds_nomatch_cvr)
remove(ds1,ds2,ds3,ds4)
source('~/GitHub/HBS/Exploratory.R', encoding = 'UTF-8')
View(ds)
View(ds)
View(ds)
source('~/GitHub/HBS/Exploratory2.R', encoding = 'UTF-8')
install.packages("stringdist")
source('~/GitHub/HBS/Exploratory2.R', encoding = 'UTF-8')
ds_cvr <- read.csv("39265897_93207_20160808134952_VIRKSOMHEDER.csv", header=TRUE, stringsAsFactors=FALSE)
View(ds_cvr)
View(ds_cvr)
ds_cvr$livsforloeb_startdato <- as.Date(ds_cvr$livsforloeb_startdato,'%d-%m-%Y')
ds_cvr <- filter(ds_cvr, as.numeric(format(livsforloeb_startdato,'%Y')) < 2009)
ds_cvr$navn_tekst <- tolower(ds_cvr$navn_tekst)
ds_cvr$navn_tekst <- trimws(ds_cvr$navn_tekst, which = 'both')
ds_cvr2 <- subset(ds_cvr, select = c(cvrnr, navn_tekst, beliggenhedsadresse_vejnavn, beliggenhedsadresse_husnummerFra, beliggenhedsadresse_bogstavFra, beliggenhedsadresse_postnummer, beliggenhedsadresse_postdistrikt, beliggenhedsadresse_bynavn, beliggenhedsadresse_kommune_tekst))
ds_cvr2 <- subset(ds_cvr, select = c(cvrnr, navn_tekst, beliggenhedsadresse_vejnavn, beliggenhedsadresse_husnummerFra, beliggenhedsadresse_bogstavFra, beliggenhedsadresse_postnr, beliggenhedsadresse_postdistrikt, beliggenhedsadresse_bynavn, beliggenhedsadresse_kommune_tekst))
View(ds_cvr2)
View(ds_cvr2)
ds_cvr$livsforloeb_startdato <- as.Date(ds_cvr$livsforloeb_startdato,'%d-%m-%Y')
ds_cvr <- filter(ds_cvr, as.numeric(format(livsforloeb_startdato,'%Y')) < 2009)
ds_cvr$navn_tekst <- tolower(ds_cvr$navn_tekst)
ds_cvr <- filter(ds_cvr, as.numeric(format(livsforloeb_startdato,'%Y')) < 2009)
View(ds_cvr)
View(ds_cvr)
ds_cvr <- filter(ds_cvr, as.numeric(format(livsforloeb_startdato,'%Y')) < 2009)
as.numeric(format(livsforloeb_startdato,'%Y')
)
as.numeric(format(ds_cvr$livsforloeb_startdato,'%Y'))
ds_cvr <- filter(ds_cvr, as.numeric(format(ds_cvr$livsforloeb_startdato,'%Y')) < 2009)
warnings()
ds_cvr <- read.csv("39265897_93207_20160808134952_VIRKSOMHEDER.csv", header=TRUE, stringsAsFactors=FALSE)
ds_cvr$livsforloeb_startdato <- as.Date(ds_cvr$livsforloeb_startdato,'%d-%m-%Y')
ds_cvr <- filter(ds_cvr, as.numeric(format(ds_cvr$livsforloeb_startdato,'%Y')) < 2009)
ds_cvr$navn_tekst <- tolower(ds_cvr$navn_tekst)
ds_cvr <- subset(ds_cvr, select = c(cvrnr, navn_tekst, beliggenhedsadresse_vejnavn, beliggenhedsadresse_husnummerFra, beliggenhedsadresse_bogstavFra, beliggenhedsadresse_postnr, beliggenhedsadresse_postdistrikt, beliggenhedsadresse_bynavn, beliggenhedsadresse_kommune_tekst))
ds_cvr <- read.csv("39265897_93207_20160808134952_VIRKSOMHEDER.csv", header=TRUE, stringsAsFactors=FALSE)
ds_cvr$livsforloeb_startdato <- as.Date(ds_cvr$livsforloeb_startdato,'%d-%m-%Y')
ds_cvr <- filter(ds_cvr, as.numeric(format(livsforloeb_startdato,'%Y')) < 2009)
ds_cvr$navn_tekst <- tolower(ds_cvr$navn_tekst)
View(ds_cvr)
ds_cvr <- filter(ds_cvr, as.numeric(format(ds_cvr$livsforloeb_startdato,'%Y')) < 2009)
ds_cvr <- read.csv("39265897_93207_20160808134952_VIRKSOMHEDER.csv", header=TRUE, stringsAsFactors=FALSE)
ds_cvr$livsforloeb_startdato <- as.Date(ds_cvr$livsforloeb_startdato,'%d-%m-%Y')
ds_cvr$livsforloeb_startdato <- as.Date(ds_cvr$livsforloeb_startdato,'%d-%m-%Y')
View(ds_cvr)
as.numeric(ds_cvr$livsforloeb_startdato[1], '%Y')
ds_cvr$livsforloeb_startdato[1]
format(ds_cvr$livsforloeb_startdato[1], '%Y')
as.numeric(format(ds_cvr$livsforloeb_startdato[1], '%Y'))
ds_cvr2 <- filter(ds_cvr, as.numeric((format(ds_cvr$livsforloeb_startdato, '%Y')))
)
ds_cvr2 = NULL
ds_cvr2 <- filter(ds_cvr, as.numeric(format(ds_cvr$livsforloeb_startdato, '%Y')) < 2009)
ds_cvr2 = NULL
ds_cvr2 <- filter(ds_cvr, ds_cvr$livsforloeb_startdato < "2009-12-31")
ds_cvr2 <- filter(ds_cvr, format(ds_cvr$livsforloeb_startdato,'%Y') < '2009')
ds_cvr2 <- filter(ds_cvr, as.Date(ds_cvr$livsforloeb_startdato,'%Y') < '2009')
summary(ds_cvr)
str(ds_cvr)
ds_cvr2 <- filter(ds_cvr, ds_cvr$livsforloeb_startdato < '2009-12-31')
source('~/GitHub/HBS/Exploratory.R', encoding = 'UTF-8')
install.packages("stringdist")
library(stringdist)
d <- stringdist(ds_nomatch_cvr$virksomhed[1],ds_cvr$navn_tekst, method = 'lv', useBytes = T)
min(d)
min.name(d)
d <- stringdistmatrix(ds_nomatch_cvr$virksomhed[1],ds_cvr$navn_tekst, method = 'lv', useBytes = T)
n=100
dist.name <- stringdistmatrix(ds_nomatch_cvr$virksomhed[n],ds_cvr$navn_tekst, method = 'lv', useBytes = T)
min.name<-apply(dist.name, 1, min)
match.s1.s2<-NULL
for(i in 1:nrow(dist.name))
{
s2.i<-match(min.name[i],dist.name[i,])
s1.i<-i
match.s1.s2<-rbind(data.frame(s2.i=s2.i,s1.i=s1.i,NOMATCH=ds_nomatch_cvr[s1.i,]$virksomhed,CVR=ds_cvr[s2.i,]$navn_tekst, adist=min.name[i]),match.s1.s2)
}
# and we then can have a look at the results
View(match.s1.s2)
# select only those where adist == 0
match.s1.s2 <- filter(match.s1.s2, adist == 0)
min.name<-apply(dist.name, 1, min)
match.s1.s2<-NULL
for(i in 1:nrow(dist.name))
{
s2.i<-match(min.name[i],dist.name[i,])
s1.i<-i
match.s1.s2<-rbind(data.frame(s2.i=s2.i,s1.i=s1.i,NOMATCH=ds_nomatch_cvr[s1.i,]$virksomhed,CVR=ds_cvr[s2.i,]$navn_tekst, adist=min.name[i]),match.s1.s2)
}
View(match.s1.s2)
dist.name <- stringdistmatrix(ds_nomatch_cvr$virksomhed,ds_cvr$navn_tekst, method = 'lv', useBytes = T)
View(d)
View(d)
source('~/GitHub/HBS/Exploratory.R', encoding = 'UTF-8')
n=1
dist.name<-adist(distinct_nm$virksomhed[1:n],ds_cvr$navn_tekst ,partial = TRUE, ignore.case = TRUE, useBytes = TRUE)
min(dist.name)
Matches <- NULL
for (n in 1:10)
{
dist.name<-adist(distinct_nm$virksomhed[1:n],ds_cvr$navn_tekst ,partial = TRUE, ignore.case = TRUE, useBytes = TRUE)
min(dist.name)
Matches <- rbind(data.frame(NM=distinct_nm[n],ds_cvr[which.min(testdist),"navn_tekst"],Matches)
}
Matches <- NULL
for (n in 1:10)
{
dist.name<-adist(distinct_nm$virksomhed[1:n],ds_cvr$navn_tekst ,partial = TRUE, ignore.case = TRUE, useBytes = TRUE)
min(dist.name)
Matches <- rbind(data.frame(NM=distinct_nm[n],ds_cvr[which.min(dist.name),"navn_tekst"]),Matches)
}
distinct_nm[n]
distinct_nm[n,]
Matches <- NULL
for (n in 1:10)
{
dist.name<-adist(distinct_nm$virksomhed[1:n],ds_cvr$navn_tekst ,partial = TRUE, ignore.case = TRUE, useBytes = TRUE)
min(dist.name)
Matches <- rbind(data.frame(NM=distinct_nm[n,],ds_cvr[which.min(dist.name),"navn_tekst"]),Matches)
}
View(Matches)
View(Matches)
for (n in 1:10)
{
dist.name<-adist(distinct_nm$virksomhed[1:n],ds_cvr$navn_tekst ,partial = TRUE, ignore.case = TRUE, useBytes = TRUE)
if (min(dist.name) == 0) Matches <- rbind(data.frame(NM=distinct_nm[n,],FoundName=ds_cvr[which.min(dist.name),"navn_tekst"],Distance=min(dist.name)),Matches)
}
Matches <- NULL
for (n in 1:10)
{
dist.name<-adist(distinct_nm$virksomhed[1:n],ds_cvr$navn_tekst ,partial = TRUE, ignore.case = TRUE, useBytes = TRUE)
if (min(dist.name) == 0) Matches <- rbind(data.frame(NM=distinct_nm[n,],FoundName=ds_cvr[which.min(dist.name),"navn_tekst"],Distance=min(dist.name)),Matches)
}
distinct_nm$virksomhed[n]
distinct_nm[n,]
View(Matches)
View(Matches)
View(Matches)
View(Matches)
dist.name<-adist(distinct_nm[n,],ds_cvr$navn_tekst, partial = TRUE, ignore.case = TRUE, useBytes = TRUE)
min(dist.name)
Matches <- NULL
for (n in 1:10)
{
dist.name<-adist(distinct_nm[n,],ds_cvr$navn_tekst, partial = TRUE, ignore.case = TRUE, useBytes = TRUE)
if (min(dist.name) == 0) Matches <- rbind(data.frame(Counter= n, NM=distinct_nm[n,],FoundName=ds_cvr[which.min(dist.name),"navn_tekst"],Distance=min(dist.name)),Matches)
}
View(Matches)
View(Matches)
View(Matches)
View(distinct_nm)
n=6
testdist <- adist(distinct_nm[n], ds_cvr$navn_tekst, fixed = T, useBytes = TRUE)
n=6
testdist <- adist(distinct_nm[n,], ds_cvr$navn_tekst, fixed = T, useBytes = TRUE)
print(distinct_nm[n,]
)
print(ds_cvr[which.min(testdist),"navn_tekst"])
min(testdist)
min(dist.name) <= 1
View(dist.name)
